app:
  scheduler:
    enable: true
    interval: 10s
    force-check-delay: 30s
  clients:
    github:
      base-url: https://api.github.com
      retry:
        max-attempts: 5
        status-codes: [ 500, 502, 503 ]
        policy: CONSTANT
        step: 0s
    stack-overflow:
      base-url: https://api.stackexchange.com/2.3
      retry:
        max-attempts: 5
        status-codes: [ 500, 502, 503 ]
        policy: CONSTANT
        step: 0s
    tracker-bot:
      base-url: http://localhost:8090
      retry:
        max-attempts: 5
        status-codes: [ 500, 502, 503 ]
        policy: CONSTANT
        step: 0s
  rate-limit:
    requests: 30
    interval: 1m
  database-access-type: jpa
  use-queue: true

spring:
  application:
    name: scrapper
  datasource:
    url: "jdbc:postgresql://localhost:5432/scrapper"
    username: "postgres"
    password: "postgres"
  liquibase:
    change-log: classpath:migrations/master.xml

springdoc:
  swagger-ui:
    enabled: true
    path: /swagger-ui

server:
  port: 8080

management:
  server:
    port: 7080
  endpoints:
    web:
      base-path: "/"
      exposure:
        include: info, health, prometheus
      path-mapping:
        prometheus: "/metrics"
  metrics:
    tags:
      application: '${spring.application.name}'

logging:
  config: classpath:log4j2-plain.xml

kafka:
  producer:
    bootstrapServers: localhost:29092
    clientId: scrapper
    acksMode: all
    deliveryTimeout: 60s
    lingerMs: 2000
    batchSize: 100_000
    maxInFlightPerConnection: 5
    enableIdempotence: true
